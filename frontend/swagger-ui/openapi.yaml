openapi: 3.0.0
info:
  title: Klopta API
  description: API documentation for Klopta API authentication and user management endpoints.
  version: 1.0.0
  contact:
    email: lander@vanderstighelen.net
servers:
  - url: https://klopta.vinnievirtuoso.online

paths:
  /api/login:
    post:
      summary: Login
      description: Authenticates a user and provides an access token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        200:
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_key:
                    type: string
        400:
          description: Username and password are required
        401:
          description: Invalid username or password

  /api/users:
    post:
      summary: Create User
      description: Creates a new user (admin access required).
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  default: user
      responses:
        201:
          description: User created successfully
        400:
          description: Username and password are required
        403:
          description: Unauthorized

    get:
      summary: Get Users
      description: Retrieves all users (admin access required).
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                        role:
                          type: string
        403:
          description: Unauthorized

    delete:
      summary: Delete User
      description: Deletes a user (admin access required).
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        200:
          description: User deleted successfully
        400:
          description: Username is required
        403:
          description: Unauthorized

    put:
      summary: Update User
      description: Updates user password and/or role (admin access required).
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  default: user
      responses:
        200:
          description: User updated successfully
        400:
          description: Username is required
        403:
          description: Unauthorized

  /api/generate_api_key:
    post:
      summary: Generate API Key
      description: Generates a new API key for the current user.
      security:
        - bearerAuth: []
      responses:
        200:
          description: API key generated successfully
        400:
          description: Username is required
        403:
          description: Unauthorized
        404:
          description: User not found

  /api/list_api_keys:
    get:
      summary: List API Keys
      description: Lists all API keys for the current user.
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of API keys
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_keys:
                    type: array
                    items:
                      type: object
                      properties:
                        api_key_id:
                          type: string
                        visible_key:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                        expires_at:
                          type: string
                          format: date-time
                        status:
                          type: string

  /api/revoke_api_key:
    delete:
      summary: Revoke API Key
      description: Revokes an existing API key.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key_id:
                  type: string
      responses:
        200:
          description: API key revoked successfully
        400:
          description: API Key ID is required
        403:
          description: Unauthorized
        404:
          description: API key not found

  /api/logout:
    delete:
      summary: Logout
      description: Revokes the current JWT token.
      security:
        - bearerAuth: []
      responses:
        200:
          description: Token successfully revoked
        403:
          description: Unauthorized

  /api/protected:
    get:
      summary: Protected Endpoint
      description: Accessible only to authenticated users.
      security:
        - bearerAuth: []
      responses:
        200:
          description: Welcome message for the current user
        403:
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
